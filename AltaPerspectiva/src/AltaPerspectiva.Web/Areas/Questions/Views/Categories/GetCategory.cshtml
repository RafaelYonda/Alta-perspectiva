@model List<Questions.Domain.Category>
<div class="row">
    <div class="col-md-4">.</div>
    <div class="col-md-4">
        <img class="left-border" src="~/images/border.png" />

        <section>
            @using (Html.BeginForm("CategoryFileUpload", "Categories", FormMethod.Post, new { area = "Questions", enctype = "multipart/form-data", @class = "form-horizontal", @role = "form" }))
            {
                <h2>Add Category</h2>
                <div class="form-group">
                    <div class="col-sm-offset-1 col-md-10">
                        <input type="text" id="name" name="name" placeholder="Name" class="form-control" minlength="2" required />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-offset-1 col-md-10">
                        <input type="text" id="description" name="description" placeholder="Description" class="form-control" minlength="2" required />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-offset-1 col-md-10">
                        <input type="file" id="file" placeholder="file" class="form-control-file" minlength="2" accept=".jpg" name="file" />
                    </div>
                </div>
                <br />
                <div class="form-group">
                    <div class="col-sm-offset-1 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default">
                    </div>
                </div>

            }
        </section>
        @* =============== *@



    </div>


</div>
<div class="row">
    <div class="col-md-4">
        .
    </div>
    <div class="col-md-4">
        <div class="panel-body">

            <table class="table" id="myTable">
                <thead>
                    <tr>
                        <th style="width:1%">
                            CategoryName
                        </th>
                        <th style="width:10%">

                        </th>
                        <th style="width:10%">

                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.HiddenFor(modelItem => item.Id)
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                <button id="brnDelete" type="button" class="btn btn-danger" onclick="editCategory(this,'@item.Id')">
                                    <span class="glyphicon glyphicon-ok"></span> Edit
                                </button>
                            </td>
                            <td>
                                @*<button id="brnDelete" type="button" class="btn btn-danger btnDelete" onclick="deleteCategory(this,'@item.Id')">
                                        <span class="glyphicon glyphicon-trash"></span> Delete
                                    </button>*@
                                <button id="brnDelete" type="button" class="btn btn-danger btnDelete" onclick="addKeywords(this,'@item.Id')">
                                    KeyWords
                                </button>

                            </td>
                        </tr>
                    }
                </tbody>

            </table>

        </div>
    </div>
</div>
<!-- Edit Modal -->
<div class="modal fade" id="approveProjectModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Update Category</h4>
            </div>
            <div class="modal-body">
                <input type="hidden" id="Id" />
                <div class="form-group">
                    <label class="control-label">Name</label>
                    <input id="pName" type="text" class="form-control" placeholder="Name">
                </div>
                <div class="form-group">
                    <label class="control-label">Description</label>
                    <input id="pDescription" type="text" class="form-control" placeholder="No Description !!">
                </div>
                <div class="form-group">
                    <label class="control-label">CategoryImage</label>
                    <br />
                    <div class="row">
                        <div class="col-lg-2">
                            <img id="image" src="" style="width:75px;height:75px;" class="img-rounded">
                        </div>
                        <div>
                            <input type="file" name="CategoryImage" id="CategoryImage" />
                        </div>
                    </div>

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button id="btnConfirm" type="button" class="btn btn-success" onclick="confirmCategory()">Confirm</button>


            </div>
        </div>
    </div>
</div>
<style>
    .table-responsive  {
        height:400px
    }
</style>

<div class="modal fade" id="keyword">
    <div class="modal-dialog custom-class">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h3 class="modal-header-text">Add Keywords</h3>
            </div>
            <div class="modal-body">
                <input type="hidden" id="CategoryId" />
                <div class="row">
                    <div class="col-lg-12">

                        <div class="col-md-3">
                            <input type="button" id="btnAddKeyword" value="Add Keyword" class="btn btn-default" onclick="saveKeyword($('#CategoryId').val())">
                        </div>
                        <div class="col-md-6">
                            <input type="text" id="newKeyword" name="newKeyword" placeholder="Add Keywords" class="form-control" />
                        </div>
                    </div>

                </div>
                <br />
                <div class="row">
                    <div class="col-lg-12">
                        <div class="col-md-9">
                            <div class="table-responsive" >
                                <table id="tblKeyword" class="table table-bordered">
                                    <thead>
                                        <tr>
                                            <th>
                                                Keywords
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody>

                                    </tbody>
                                </table>

                            </div>
                        </div>
                    </div>

                </div>
                
            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>*@
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<script>


    function saveKeyword(categoryId) {
        console.log(categoryId);
        var newKeyword = $('#newKeyword').val();
        if (newKeyword.length <= 1 || newKeyword === undefined) {
            alert('Keyword is not correct');
            return;

        } else {
            var obj = {};
            obj.categoryId = categoryId;
            obj.newKeyword = newKeyword;
            console.log(obj);
            var url = '@Url.Action("SaveKeyWords", "Categories", new { Area = "Questions" })';
            $.ajax({
                url: url,
                type: 'POST',
                data: obj,
                async: false,
                success: function (respText) {
                    console.log(respText);

                    var tr = '<tr>';
                    tr = tr + '<td>' + newKeyword + '</td>';

                    tr = tr + '</tr>';
                    $('#tblKeyword > tbody:last').append(tr);
                    $('#newKeyword').val('');

                },
                error: function (jqXhr, textStatus, errorThrown) {

                }
            });

        }

    }
    function addKeywords(element, Id) {

        var url = '@Url.Action("GetKeyWords", "Categories", new { Area = "Questions" })';
        var obj = {};
        obj.Id = Id;
        console.log(obj);
          $("#tblKeyword tbody").empty();
        $.ajax({
            url: url,
            type: 'POST',
            data: obj,
            async: false,
            success: function (respText) {
                console.log(respText);
                $('#CategoryId').val(Id);
                
                for (var i = 0; i < respText.length; i++) {
                    var tr = '<tr>';
                    tr = tr + '<td>' + respText[i] + '</td>';

                    tr = tr + '</tr>';
                    $('#tblKeyword > tbody:last').append(tr);

                    //console.log(tr);
                }
                $('#newKeyword').val('');
                $('#keyword').modal({
                    show: true,
                    backdrop: 'static'
                });
            },
            error: function (jqXhr, textStatus, errorThrown) {

            }
        });
    }
    function editCategory(element, Id) {
        var url = '@Url.Action("CategoryFilePath", "Categories", new { Area = "Questions" })';
        var obj = {};
        obj.Id = Id;
        console.log(obj);
        console.log(url);
        $.ajax({
            url: url,
            type: 'GET',
            data: obj,
            async: false,
            success: function (respText) {
                console.log(respText);
                $('#Id').val(obj.Id);
                $("#image").attr("src", respText.image);
                $('#pName').val(respText.name);
                $('#pDescription').val(respText.description);
                $("#CategoryImage").val("");
                $('#approveProjectModal').modal({
                    show: true,
                    backdrop: 'static'
                });
            },
            error: function (jqXhr, textStatus, errorThrown) {

            }
        });

    }
    function confirmCategory() {
        var Id = $('#Id').val();
        var data = new FormData();
        var fileUpload = $("#CategoryImage").get(0);
        var files = fileUpload.files;
        var data = new FormData();
        for (var i = 0; i < files.length ; i++) {
            data.append(files[i].name, files[i]);
        }

        data.append('Id', Id);
        data.append('Name', $('#pName').val());
        data.append('Description', $('#pDescription').val());
        //var obj = {};
        //obj.Id = Id;
        //obj.Name = $('#pName').val();
        //obj.Nescription = $('#pDescription').val();
        var url = '@Url.Action("CategoryUpdate", "Categories", new { Area = "Questions" })';
        $.ajax({
            url: url,
            type: 'POST',
            data: data,
            contentType: false,
            processData: false,
            success: function (respText) {
                console.log(respText);
                alert('Saved Successfully');
                $('#approveProjectModal').modal('hide');
            },
            error: function (jqXhr, textStatus, errorThrown) {
                alert('error ..Check log for details');
                console.log(textStatus, errorThrown);
                var msg = '';
                if (jqXhr.status === 0) {
                    msg = 'Not connect.\n Verify Network.';
                } else if (jqXhr.status == 404) {
                    msg = 'Requested page not found. [404]';
                } else if (jqXhr.status == 500) {
                    msg = 'Internal Server Error [500].';
                } else if (errorThrown === 'parsererror') {
                    msg = 'Requested JSON parse failed.';
                } else if (errorThrown === 'timeout') {
                    msg = 'Time out error.';
                } else if (errorThrown === 'abort') {
                    msg = 'Ajax request aborted.';
                } else {
                    msg = 'Uncaught Error.\n' + jqXhr.responseText;
                }
                console.log(msg);
            }
        });
    }
    @*function deleteCategory(element, Id) {
        var url = '@Url.Action("Delete", "Categories", new { Area = "Questions" })';
        var obj = {};
        obj.Id = Id;
        $.ajax({
            url: url,
            type: 'POST',
            data: obj,
            async: false,
            success: function (respText) {
                console.log(respText);
                if (respText.success == 'ok') {
                    alert('Deleted Successfully')
                    document.getElementById("myTable").deleteRow(element.parentNode.parentNode.rowIndex);
                } else {
                    alert('Error');
                }
            },
            error: function (jqXhr, textStatus, errorThrown) {

            }
        });
    }*@



</script>

