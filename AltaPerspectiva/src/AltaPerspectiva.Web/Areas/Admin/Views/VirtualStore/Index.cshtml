@model AltaPerspectiva.Web.Areas.Admin.Models.AddVirtualStoreViewModel

<style>
    .upload-panel {
        width: 60%;
        margin: 69px auto;
        background-color: #f1efef;
    }

    .bottm-margin {
        margin-bottom: 5px;
    }

    .btn-container {
        text-align: right;
    }

    .upload-box {
        cursor: pointer;
        position: relative;
        border: 2px dashed #bfbaba;
        height: 100%;
        width: 100%;
        text-align: center;
        border-radius: 10px;
    }

        .upload-box h1 {
            font-size: 210px;
            line-height: 110px;
            margin-top: 50px;
            margin-bottom: 38px;
            color: #d0cdcd;
        }

        .upload-box p {
            font-size: 40px;
            line-height: 30px;
            margin-bottom: 10px;
            color: #d0cdcd;
        }

    .hidden-file-input {
        cursor: pointer;
        opacity: 0.0;
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        width: 100%;
        height: 100%;
    }
   
</style>
<h2>VitualStore</h2>
<script>

    function alertFilename() {
        var file = $('#ScreenShotImage')[0].files[0]
        if (file) {
            var fileName = "<h1><p>" + file.name+"</p></h1>"
           // console.log(file.name);
            $('#IMAGEN').html(fileName);
        }
    }

</script>
@using (Html.BeginForm("Index", "VirtualStore", FormMethod.Post, new { enctype = "multipart/form-data", Area = "Admin" }))
{
    @Html.AntiForgeryToken()
    <div class="panel panel-body upload-panel">
        @Html.ValidationSummary(true)

        <div class="row">
            <div class="col-md-5">
                <div class="upload-box">
                    @Html.TextBoxFor(model => model.ScreenShotImage, new { type = "file", @class = "hidden-file-input", onchange = "alertFilename()" })
                    @Html.ValidationMessageFor(model => model.ScreenShotImage)
                    <div id="IMAGEN">
                        <h1>+</h1>
                        <p>IMAGEN</p>
                    </div>
                    
                </div>

            </div>
            <div class="col-md-7">
                @Html.TextBoxFor(model => model.Price, new { @placeholder = "Prize", @class = "form-control input-lg bottm-margin", @type = "number",@step="any" })
                @Html.ValidationMessageFor(model => model.Price)
                @Html.TextBoxFor(model => model.Title, new { @placeholder = "Title", @class = "form-control input-lg bottm-margin" })
                @Html.ValidationMessageFor(model => model.Title)
                @Html.TextAreaFor(model => model.Description, new { @placeholder = "Description", @class = "form-control bottm-margin input-lg", @rows = "3" })
                @Html.TextBoxFor(model => model.ProductFile, new { type = "file", @class = "form-control input-lg bottm-margin" })
                @Html.ValidationMessageFor(model => model.ProductFile)
                
            </div>
        </div>
        <div class="btn-group-lg btn-container">
            <input type="submit" value="Add" class="btn btn-primary btn-lg">
            @*<button class="btn btn-primary btn-lg">Upload</button>*@
        </div>
    </div>
}
<br />
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ProductFileName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ScreenShotImage)
        </th>
        <th>
            Created Date
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.VirtualStores)
    {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ProductFileName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ScreenShotFileName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreatedOn)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", "VirtualStore", new { id = item.Id, Area = "Admin" }, null) |

            @Html.ActionLink("Delete", "Delete", "VirtualStore", new { id = item.Id, Area = "Admin" })
        </td>
    </tr>
    }

</table>
