@using AltaPerspectiva.Web.Areas.Admin.helpers
@model AltaPerspectiva.Web.Areas.Admin.Models.AddVirtualStoreViewModel
<style>
    .left-border {
        margin-top: 77px;
        height: 522px;
    }

    .customrow {
        min-height: 100vh;
    }

    .table {
        margin-left: 244px;
    }



    .create-button {
        margin-left: 8.666667%;
    }

    textarea {
        width: 237px;
        height: 89px;
    }
</style>

<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>

<div class="row">
    
    <div class="col-md-8">
        @*<img class="left-border" src="~/images/border.png" />*@

        <h2>Edit VitualStore</h2>
            @using (Html.BeginForm("Edit", "VirtualStore", FormMethod.Post, new { area = "Admin", enctype = "multipart/form-data", @class = "form-horizontal", @role = "form" }))
            {
                @Html.HiddenFor(model => model.Id)
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.Id)
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, new { @class = "col-sm-offset-1 col-md-2" })
                    <div class="col-sm-offset-1 col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { placeholder = "Input name", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, new { @class = "col-sm-offset-1 col-md-2" })
                    <div class="col-sm-offset-1 col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { placeholder = "Input description", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, new { @class = "col-sm-offset-1 col-md-2" })
                    <div class="col-sm-offset-1 col-md-10">
                        @Html.TextBoxFor(model => model.Price, new { @placeholder = "Input description", @class = "form-control", @type = "number" })
                        @Html.ValidationMessageFor(model => model.Price)
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.Labelmodel.Price, new { @class = "col-sm-offset-1 col-md-2" })*@
                    <label class="col-sm-offset-1 col-md-2">ScreenShotFileName</label>
                    <div class="col-sm-offset-1 col-md-10">
                        <img src="@Url.Content(new AzureFileUploadHelper().GetVirtualStoreDocument( Model.ScreenShotFileName))" alt="Image" class="img-rounded" width="233" height="147" />
                        @Html.HiddenFor(model=>model.ScreenShotFileName)
                        @Html.CheckBoxFor(model => model.IsPreviousScreenShotImage)Previous file
                    </div>
                    <div class="col-sm-offset-1 col-md-10">
                        @Html.TextBoxFor(model => model.ScreenShotImage, new { type = "file", @class = "form-control input-lg bottm-margin", @value= "Model.ScreenShotFileName" })
                        @Html.ValidationMessageFor(model => model.ScreenShotImage)
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-offset-1 col-md-2">ProductFileName</label>
                    <div class="col-sm-offset-1 col-md-10">
                        @Html.TextBoxFor(model => model.ProductFileName, new { @placeholder = "Input description", @class = "form-control",@readonly = "readonly" })
                        @Html.HiddenFor(model => model.ProductFileName)
                        @Html.CheckBoxFor(model => model.IsPreviousProductFile)Previous file
                    </div>
                    <div class="col-sm-offset-1 col-md-10">
                        @Html.TextBoxFor(model => model.ProductFile, new { type = "file", @class = "form-control input-lg bottm-margin" })
                        
                        @Html.ValidationMessageFor(model => model.ProductFile)
                    </div>
                </div>

                @*<div class="form-group">
                    <label class="col-sm-offset-1 col-md-2">
                        Image
                    </label>

                    <div class="col-sm-offset-1 col-md-10">
                        @Html.TextBox("Image", Model.ImagePath, new { type = "file", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Image)
                    </div>
                </div>*@
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10 create-button">
                        <input type="submit" value="Update" class="btn btn-default" />
                    </div>
                </div>
            }
      







        @* =============== *@

    </div>


</div>