@model AltaPerspectiva.Web.Areas.Admin.Models.CategoryViewModel
<style>
    .left-border {
        margin-top: 77px;
        height: 522px;
    }

    .customrow {
        min-height: 100vh;
    }

    .create-button {
        margin-left: 8.666667%;
    }

    textarea {
        width: 237px;
        height: 89px;
    }
</style>
@{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "icon-dice",
        Value = "icon-dice"
    });
    listItems.Add(new SelectListItem
    {
        Text = "icon-chart",
        Value = "icon-chart"

    });

    int foundSelectedIndex = listItems.FindIndex(x => x.Value == Model.Icon);

    if (foundSelectedIndex == -1 || foundSelectedIndex>listItems.Count-1)
    {
        foundSelectedIndex = 0;
    }

    listItems[foundSelectedIndex].Selected = true;

}

<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
<h2>@ViewData["Category"]</h2>
<div class="row customrow">
    <div class="col-md-4">.</div>
    <div class="col-md-4">
        
        <img class="left-border" src="~/images/border.png"/>


            @using (Html.BeginForm("AddCategory", "Category", FormMethod.Post, new {area = "Admin", enctype = "multipart/form-data", @class = "form-horizontal", @role = "form"}))
            {
                <hr/>

                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.Id)
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, new {@class = "col-sm-offset-1 col-md-2"})
                    <div class="col-sm-offset-1 col-md-10">
                        @Html.EditorFor(model => model.Name, new {htmlAttributes = new {placeholder = "Input name", @class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, new {@class = "col-sm-offset-1 col-md-2"})
                    <div class="col-sm-offset-1 col-md-10">
                        @Html.TextAreaFor(model => model.Description, new {htmlAttributes = new {placeholder = "Input description", @class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Description)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Icon, new {@class = "col-sm-offset-1 col-md-2"})
                    <div class="col-sm-offset-1 col-md-10">
                        @Html.DropDownList("Icon", listItems, new {placeholder = "Input icons", @class = "form-control"})
                        @Html.ValidationMessageFor(model => model.Description)
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-offset-1 col-md-2">
                        Image
                    </label>

                    <div class="col-sm-offset-1 col-md-10">
                        @Html.TextBox("Image", Model.ImagePath, new {type = "file", @class = "form-control"})
                        @Html.ValidationMessageFor(model => model.Image)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10 create-button">
                        <input type="submit" value="Create" class="btn btn-default"/>
                    </div>
                </div>
            }

        @* =============== *@
        @{
            <br/>

            if (ViewBag.Message != null)
            {
                <h1 class="alert alert-danger">@ViewBag.Message</h1>
                ViewData.Clear();
            }

        }



    </div>


</div>
