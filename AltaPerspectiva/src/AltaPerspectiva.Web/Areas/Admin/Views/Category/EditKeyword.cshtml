@model AltaPerspectiva.Web.Areas.Admin.Models.TopicNKeywordViewModel


<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
<style>
    .alignFixed {
        margin-left: 14px;
    }

    .marginFixed {
        margin-left: 16px;
    }

    .panel-body {
        width: 678px;
    }
</style>
<div class="row">
    <div class="col-md-8 alignFixed">

        @using (Html.BeginForm("EditKeyword", "Category", FormMethod.Post, new { area = "Admin", @class = "form-horizontal", @role = "form" }))
        {
            <hr />

            @Html.ValidationSummary(true)
            @*@Html.HiddenFor(model => model.Id)*@
            <div class="form-group">
                @*@Html.LabelFor(model => model.Name, new { @class = "col-sm-offset-1 col-md-2" })*@
                <div class="col-sm-offset-1 col-md-4">Category Name</div>
                <div class="col-sm-offset-1 col-md-8">
                    @Html.DropDownListFor(
                        x => x.CategoryId,
                        new SelectList(Model.Categories, "Id", "Name"),
                        "-- Please select a category --", new { @class = "form-control" }
                        )
                    @Html.ValidationMessageFor(x => x.CategoryId)
                </div>
            </div>
            @*<div class="form-group">
                                <div class="col-sm-offset-1 col-md-2">Category Name</div>
                                <div class="col-sm-offset-1 col-md-10">
                                    @Html.DropDownListFor(
                    x => x.CategoryId,
                    new SelectList(Model.Topics, "Id", "TopicName"),
                    "-- Please select a topic --"
                )
                                    @Html.ValidationMessageFor(x => x.CategoryId)
                                </div>
                            </div>*@
            <div class="form-group">
                <div class="col-sm-offset-1 ">
                    <input type="submit" value="Show" class="btn btn-default marginFixed" />
                </div>


            </div>
        }
    </div>
</div>
<div class="row">

    <div class="col-md-8">
        <div class="panel-body">
            <div class="table-responsive">
                <table class="table table-bordered table-striped" id="myTable">
                    <thead>
                        <tr>
                            <th style="width:51%">
                                KeywordName
                            </th>
                            <th style="width:10%">
                                Update
                            </th>
                            <th style="width:10%">
                                Delete
                            </th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Keywords)
                        {
                            <tr>
                                <td>
                                    @Html.TextBoxFor(modelItem => item.Text, new { @class = "form-control" })
                                </td>
                                <td>
                                    <button id="btnDelete" type="button" class="btn btn-success" onclick="Update(this,'@item.Id',$(this).closest('tr').find('input').val())">
                                        Update
                                    </button>

                                </td>
                                <td>
                                    <button id="btnDelete" type="button" class="btn btn-success" onclick="Delete(this,'@item.Id')">
                                        Delete
                                    </button>
                                </td>

                            </tr>
                        }
                    </tbody>

                </table>
            </div>

        </div>
    </div>
</div>
<script>
    function Update(element, id, Text) {
        // console.log(element);
        console.log('Id->' + id + ' Text=' + Text)

        if (Text.length <= 1 || Text === undefined) {
            // alertify.alert('Please Enter a Valid Topic Name');
            alert('Please Enter a Valid Keyword Name');
            return;

        } else {
            var url = '@Url.Action("UpdateKeyword", "Category", new { Area = "Admin" })';
            var obj = {};
            obj.id = id;
            obj.Text = Text;
            console.log(obj);
            $.ajax({
                url: url,
                type: 'POST',
                data: obj,
                async: false,
                success: function (respText) {
                    console.log(respText);
                    if (respText.result == true) {
                        //alertify.alert('Updated successfully',
                        //    function () {
                        //           location.reload(true);
                        //    });
                        alert('Keyword Name Updated successfully');
                        location.reload(true);
                    } else {
                        //alertify.error('Topic already exists');
                        alert('Keyword already exists');

                    }


                },
                error: function (jqXhr, textStatus, errorThrown) {
                    //alertify.error('Category Name is not valid');
                    alert('Keyword is not valid');
                }
            });
        }
    }
    function Delete(element, id) {
        @*console.log('Id->' + id)
        alertify.confirm("Do you really want to delete?", function () {
            //user clicked "ok"
            var url = '@Url.Action("DeleteTopic", "Category", new { Area = "Admin" })';
            var obj = {};
            obj.id = id;
            console.log(obj);
            $.ajax({
                url: url,
                type: 'POST',
                data: obj,
                async: false,
                success: function (respText) {
                    console.log(respText);
                    if (respText.result == true) {
                        alertify.alert('Deleted successfully',
                            function () {
                                location.reload(true);
                            });
                    } else {
                        alertify.error('Topic does not exists exists');
                    }


                },
                error: function (jqXhr, textStatus, errorThrown) {

                }
            });

        }, function () {
            // user clicked "cancel"
        });*@
        var confrimDelete = confirm("Do you really want to delete?");
        if (confrimDelete == true) {
            //user clicked "ok"
            var url = '@Url.Action("DeleteKeyword", "Category", new { Area = "Admin" })';
            var obj = {};
            obj.id = id;
            console.log(obj);
            $.ajax({
                url: url,
                type: 'POST',
                data: obj,
                async: false,
                success: function (respText) {
                    console.log(respText);
                    if (respText.result == true) {
                        //alertify.alert('Deleted successfully',
                        //    function () {
                        //        location.reload(true);
                        //    });
                        alert('Deleted successfully');
                        location.reload(true);

                    } else {
                        //alertify.error('Topic does not exists exists');
                        alert('Keyword does not exists');
                    }


                },
                error: function (jqXhr, textStatus, errorThrown) {

                }
            });
        }
    }
</script>