/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../tsScripts/app/questions/question-home.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../../../tsScripts/app/shared/nav-bar/nav-bar.component';
import * as import9 from '../../../../tsScripts/app/services/authentication.service';
import * as import10 from '../shared/nav-bar/nav-bar.component.ngfactory';
import * as import11 from '@angular/core/src/linker/view_container';
import * as import12 from '../../../node_modules/@angular/router/src/directives/router_outlet.ngfactory';
import * as import13 from '@angular/http/src/http';
import * as import14 from '@angular/core/src/linker/component_factory_resolver';
import * as import15 from '@angular/router/src/router';
import * as import16 from '@angular/router/src/router_outlet_map';
import * as import17 from '@angular/router/src/directives/router_outlet';
export class Wrapper_QuestionHomeComponent {
  /*private*/ _eventHandler:Function;
  context:import0.QuestionHomeComponent;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.QuestionHomeComponent();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_QuestionHomeComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_QuestionHomeComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.QuestionHomeComponent>;
  _QuestionHomeComponent_0_3:Wrapper_QuestionHomeComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_QuestionHomeComponent_Host0,renderType_QuestionHomeComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'ng-component',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_QuestionHomeComponent0(this.viewUtils,this,0,this._el_0);
    this._QuestionHomeComponent_0_3 = new Wrapper_QuestionHomeComponent();
    this.compView_0.create(this._QuestionHomeComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._QuestionHomeComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.QuestionHomeComponent) && (0 === requestNodeIndex))) { return this._QuestionHomeComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._QuestionHomeComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const QuestionHomeComponentNgFactory:import7.ComponentFactory<import0.QuestionHomeComponent> = new import7.ComponentFactory<import0.QuestionHomeComponent>('ng-component',View_QuestionHomeComponent_Host0,import0.QuestionHomeComponent);
const styles_QuestionHomeComponent:any[] = ['.banner-container[_ngcontent-%COMP%] {\n        position: relative;\n    }\n\n    .fixed-top[_ngcontent-%COMP%] {\n        position: fixed;\n        top: 0;\n    }\n\n    .background-set[_nghost-%COMP%] {\n        min-height: 66px !important;\n        background-image: url(../images/background.png);\n    }\n\n    .body-padding[_ngcontent-%COMP%] {\n        padding-top: 150px;\n    }\n\n    h2[_ngcontent-%COMP%] {\n        margin-left: 33%;\n    }'];
var renderType_QuestionHomeComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.Emulated,styles_QuestionHomeComponent,{});
export class View_QuestionHomeComponent0 extends import1.AppView<import0.QuestionHomeComponent> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _el_3:any;
  compView_3:import1.AppView<import8.NavBarComponent>;
  _AuthenticationService_3_3:import9.AuthenticationService;
  _NavBarComponent_3_4:import10.Wrapper_NavBarComponent;
  _text_4:any;
  _el_5:any;
  /*private*/ _vc_5:import11.ViewContainer;
  _RouterOutlet_5_5:import12.Wrapper_RouterOutlet;
  _text_6:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_QuestionHomeComponent0,renderType_QuestionHomeComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','row'),(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'nav-bar',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_3 = new import10.View_NavBarComponent0(this.viewUtils,this,3,this._el_3);
    this._AuthenticationService_3_3 = new import9.AuthenticationService(this.parentView.injectorGet(import13.Http,this.parentIndex));
    this._NavBarComponent_3_4 = new import10.Wrapper_NavBarComponent(this._AuthenticationService_3_3,this.parentView.injectorGet(import14.ComponentFactoryResolver,this.parentIndex),this.parentView.injectorGet(import15.Router,this.parentIndex));
    this.compView_3.create(this._NavBarComponent_3_4.context);
    this._text_4 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_1,'router-outlet',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._vc_5 = new import11.ViewContainer(5,1,this,this._el_5);
    this._RouterOutlet_5_5 = new import12.Wrapper_RouterOutlet(this.parentView.injectorGet(import16.RouterOutletMap,this.parentIndex),this._vc_5.vcRef,this.parentView.injectorGet(import14.ComponentFactoryResolver,this.parentIndex),(null as any));
    this._text_6 = this.renderer.createText(this._el_1,'\n',(null as any));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import9.AuthenticationService) && (3 === requestNodeIndex))) { return this._AuthenticationService_3_3; }
    if (((token === import8.NavBarComponent) && (3 === requestNodeIndex))) { return this._NavBarComponent_3_4.context; }
    if (((token === import17.RouterOutlet) && (5 === requestNodeIndex))) { return this._RouterOutlet_5_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._NavBarComponent_3_4.ngDoCheck(this,this._el_3,throwOnChange);
    this._RouterOutlet_5_5.ngDoCheck(this,this._el_5,throwOnChange);
    this._vc_5.detectChangesInNestedViews(throwOnChange);
    this.compView_3.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this._vc_5.destroyNestedViews();
    this.compView_3.destroy();
    this._RouterOutlet_5_5.ngOnDestroy();
  }
}