/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './answer-dialog.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from './answer-dialog.component.css.shim.ngstyle';
import * as import9 from '@angular/core/src/linker/query_list';
import * as import10 from '@angular/core/src/linker/view_container';
import * as import11 from '../answer-submit/answer-submit.component';
import * as import12 from '../../services/question-answer.service';
import * as import13 from '../../services/profile.service';
import * as import14 from '../answer-submit/answer-submit.component.ngfactory';
import * as import15 from '@angular/http/src/http';
import * as import16 from '@angular/router/src/router';
import * as import17 from '../../services/authentication.service';
import * as import18 from 'ng2-toastr/src/toast-manager';
export class Wrapper_AnswerDialogComponent {
  /*private*/ _eventHandler:Function;
  context:import0.AnswerDialogComponent;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.AnswerDialogComponent();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_AnswerDialogComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_AnswerDialogComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.AnswerDialogComponent>;
  _AnswerDialogComponent_0_3:Wrapper_AnswerDialogComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_AnswerDialogComponent_Host0,renderType_AnswerDialogComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'answer-dialog',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_AnswerDialogComponent0(this.viewUtils,this,0,this._el_0);
    this._AnswerDialogComponent_0_3 = new Wrapper_AnswerDialogComponent();
    this.compView_0.create(this._AnswerDialogComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._AnswerDialogComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.AnswerDialogComponent) && (0 === requestNodeIndex))) { return this._AnswerDialogComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._AnswerDialogComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const AnswerDialogComponentNgFactory:import7.ComponentFactory<import0.AnswerDialogComponent> = new import7.ComponentFactory<import0.AnswerDialogComponent>('answer-dialog',View_AnswerDialogComponent_Host0,import0.AnswerDialogComponent);
const styles_AnswerDialogComponent:any[] = [import8.styles];
var renderType_AnswerDialogComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.Emulated,styles_AnswerDialogComponent,{});
export class View_AnswerDialogComponent0 extends import1.AppView<import0.AnswerDialogComponent> {
  _viewQuery_AnswerSubmitComponent_0:import9.QueryList<any>;
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _text_6:any;
  _el_7:any;
  /*private*/ _vc_7:import10.ViewContainer;
  compView_7:import1.AppView<import11.AnswerSubmitComponent>;
  _QuestionAnswerService_7_5:import12.QuestionAnswerService;
  _ProfileService_7_6:import13.ProfileService;
  _AnswerSubmitComponent_7_7:import14.Wrapper_AnswerSubmitComponent;
  _text_8:any;
  _text_9:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_AnswerDialogComponent0,renderType_AnswerDialogComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_AnswerSubmitComponent_0 = new import9.QueryList<any>();
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray4(4,'class','modal-overlay z-modal','id','dialogModal'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','modal-content answer-dialog'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n        ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'div',new import3.InlineArray2(2,'class','exit-button'),(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'x',(null as any));
    this._text_6 = this.renderer.createText(this._el_2,'\n        ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_2,'answer-submit',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._vc_7 = new import10.ViewContainer(7,2,this,this._el_7);
    this.compView_7 = new import14.View_AnswerSubmitComponent0(this.viewUtils,this,7,this._el_7);
    this._QuestionAnswerService_7_5 = new import12.QuestionAnswerService(this.parentView.injectorGet(import15.Http,this.parentIndex));
    this._ProfileService_7_6 = new import13.ProfileService(this.parentView.injectorGet(import15.Http,this.parentIndex));
    this._AnswerSubmitComponent_7_7 = new import14.Wrapper_AnswerSubmitComponent(this._QuestionAnswerService_7_5,this.parentView.injectorGet(import16.Router,this.parentIndex),this._ProfileService_7_6,this.parentView.injectorGet(import17.AuthenticationService,this.parentIndex),this.parentView.injectorGet(import18.ToastsManager,this.parentIndex),this._vc_7.vcRef);
    this.compView_7.create(this._AnswerSubmitComponent_7_7.context);
    this._text_8 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._text_9 = this.renderer.createText(this._el_0,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_4,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_4));
    this._viewQuery_AnswerSubmitComponent_0.reset([this._AnswerSubmitComponent_7_7.context]);
    this.context.anserSubmit = this._viewQuery_AnswerSubmitComponent_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._text_9
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.QuestionAnswerService) && (7 === requestNodeIndex))) { return this._QuestionAnswerService_7_5; }
    if (((token === import13.ProfileService) && (7 === requestNodeIndex))) { return this._ProfileService_7_6; }
    if (((token === import11.AnswerSubmitComponent) && (7 === requestNodeIndex))) { return this._AnswerSubmitComponent_7_7.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_7_0_0:any = this.context.question;
    this._AnswerSubmitComponent_7_7.check_question(currVal_7_0_0,throwOnChange,false);
    const currVal_7_0_1:any = false;
    this._AnswerSubmitComponent_7_7.check_isFullScreen(currVal_7_0_1,throwOnChange,false);
    const currVal_7_0_2:any = this.context.isDetail;
    this._AnswerSubmitComponent_7_7.check_isDetail(currVal_7_0_2,throwOnChange,false);
    this._AnswerSubmitComponent_7_7.ngDoCheck(this,this._el_7,throwOnChange);
    this._vc_7.detectChangesInNestedViews(throwOnChange);
    this.compView_7.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this._vc_7.destroyNestedViews();
    this.compView_7.destroy();
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.handleClick($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_4(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.onClickedExit()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}