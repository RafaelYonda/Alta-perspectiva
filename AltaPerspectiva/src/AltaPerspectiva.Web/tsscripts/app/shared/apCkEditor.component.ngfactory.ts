/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './apCkEditor.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from 'ng2-ckeditor/lib/ckeditor.component';
import * as import9 from '../../../node_modules/ng2-ckeditor/lib/ckeditor.component.ngfactory';
import * as import10 from '../../../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import11 from '../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import12 from '@angular/core/src/zone/ng_zone';
import * as import13 from '@angular/forms/src/directives/control_value_accessor';
import * as import14 from '@angular/forms/src/directives/ng_model';
import * as import15 from '@angular/forms/src/directives/ng_control';
import * as import16 from '@angular/forms/src/directives/ng_control_status';
export class Wrapper_AppCkEditorComponent {
  /*private*/ _eventHandler:Function;
  context:import0.AppCkEditorComponent;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.AppCkEditorComponent();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_AppCkEditorComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_AppCkEditorComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.AppCkEditorComponent>;
  _AppCkEditorComponent_0_3:Wrapper_AppCkEditorComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_AppCkEditorComponent_Host0,renderType_AppCkEditorComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'ck-editor',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_AppCkEditorComponent0(this.viewUtils,this,0,this._el_0);
    this._AppCkEditorComponent_0_3 = new Wrapper_AppCkEditorComponent();
    this.compView_0.create(this._AppCkEditorComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._AppCkEditorComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.AppCkEditorComponent) && (0 === requestNodeIndex))) { return this._AppCkEditorComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._AppCkEditorComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const AppCkEditorComponentNgFactory:import7.ComponentFactory<import0.AppCkEditorComponent> = new import7.ComponentFactory<import0.AppCkEditorComponent>('ck-editor',View_AppCkEditorComponent_Host0,import0.AppCkEditorComponent);
const styles_AppCkEditorComponent:any[] = ([] as any[]);
var renderType_AppCkEditorComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_AppCkEditorComponent,{});
export class View_AppCkEditorComponent0 extends import1.AppView<import0.AppCkEditorComponent> {
  _el_0:any;
  compView_0:import1.AppView<import8.CKEditorComponent>;
  _CKEditorComponent_0_3:import9.Wrapper_CKEditorComponent;
  _NG_VALUE_ACCESSOR_0_4:any[];
  _NgModel_0_5:import10.Wrapper_NgModel;
  _NgControl_0_6:any;
  _NgControlStatus_0_7:import11.Wrapper_NgControlStatus;
  _text_1:any;
  _map_8:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_AppCkEditorComponent0,renderType_AppCkEditorComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
    this._map_8 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {removeButtons: p0};
    });
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'ckeditor',new import3.InlineArray2(2,'debounce','500'),(null as any));
    this.compView_0 = new import9.View_CKEditorComponent0(this.viewUtils,this,0,this._el_0);
    this._CKEditorComponent_0_3 = new import9.Wrapper_CKEditorComponent(this.parentView.injectorGet(import12.NgZone,this.parentIndex));
    this._NG_VALUE_ACCESSOR_0_4 = [this._CKEditorComponent_0_3.context];
    this._NgModel_0_5 = new import10.Wrapper_NgModel((null as any),(null as any),(null as any),this._NG_VALUE_ACCESSOR_0_4);
    this._NgControl_0_6 = this._NgModel_0_5.context;
    this._NgControlStatus_0_7 = new import11.Wrapper_NgControlStatus(this._NgControl_0_6);
    this._text_1 = this.renderer.createText((null as any),'\n               ',(null as any));
    this.compView_0.create(this._CKEditorComponent_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray4(4,'ngModelChange',(null as any),'changed',(null as any)),this.eventHandler(this.handleEvent_0));
    this._NgModel_0_5.subscribe(this,this.eventHandler(this.handleEvent_0),true);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import8.CKEditorComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._CKEditorComponent_0_3.context; }
    if (((token === import13.NG_VALUE_ACCESSOR) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NG_VALUE_ACCESSOR_0_4; }
    if (((token === import14.NgModel) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgModel_0_5.context; }
    if (((token === import15.NgControl) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgControl_0_6; }
    if (((token === import16.NgControlStatus) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgControlStatus_0_7.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this._map_8('Outdent,Indent,About,SpecialChar,Styles,Format,Source,NumberedList,BulletedList,Scayt,Blockquote,Anchor,Table');
    this._CKEditorComponent_0_3.check_config(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = '500';
    this._CKEditorComponent_0_3.check_debounce(currVal_0_0_1,throwOnChange,false);
    this._CKEditorComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_0_1_0:any = this.context.ckeditorContent;
    this._NgModel_0_5.check_model(currVal_0_1_0,throwOnChange,false);
    this._NgModel_0_5.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgControlStatus_0_7.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgControlStatus_0_7.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._CKEditorComponent_0_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._CKEditorComponent_0_3.ngOnDestroy();
    this._NgModel_0_5.ngOnDestroy();
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.context.ckeditorContent = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'changed')) {
      const pd_sub_1:any = ((<any>this.context.onChange($event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}